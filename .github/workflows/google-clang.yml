name: Google Clang
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_MAXSIZE: "4G"
      CCACHE_HARDLINK: "true"
      KERNEL_DEFCONFIG: "star2qlte_chn_open_defconfig"
      KERNEL_CMDLINE: "ARCH=arm64 CC=clang LLVM=1 O=out"
      EXTRAVERSION: "-Rel8.1"
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: Andrey0800770/samsung_sdm845-kernel
          ref: ksu+susfs
          submodules: "false"
          fetch-depth: 100

      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2

      - name: Install dependencies
        run: |
          sed -i 's/EXTRAVERSION =.*/EXTRAVERSION = ${{ env.EXTRAVERSION }}/' Makefile
          sudo tee /etc/apt/sources.list > /dev/null <<EOF
          deb http://archive.ubuntu.com/ubuntu/ noble main restricted universe multiverse
          deb http://archive.ubuntu.com/ubuntu/ noble-updates main restricted universe multiverse
          deb http://archive.ubuntu.com/ubuntu/ noble-backports main restricted universe multiverse
          deb http://security.ubuntu.com/ubuntu/ noble-security main restricted universe multiverse
          EOF
          sudo apt-get update -y && sudo apt install aria2 binutils make python3 libssl-dev build-essential bc bison flex unzip libssl-dev ca-certificates xz-utils mkbootimg cpio device-tree-compiler git git-lfs -y
          aria2c -j$(nproc --all) https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/67af9f576276f27363074c4388e2cf0963bab6df/clang-r563880b.tar.gz -o clang.tar.gz
          mkdir clang && tar -xzvf clang.tar.gz -C clang >> /dev/null
          git clone https://github.com/Andrey0800770/kernel-build/ -b anykernel AnyKernel3 && rm -rf AnyKernel3/.git*
      - name: Build Kernel-With-KernelSU
        run: |
          export KBUILD_BUILD_USER="andrey" KBUILD_BUILD_HOST="linux"
          export PATH=$(pwd)/zyc-clang/bin/:$PATH
          make $KERNEL_CMDLINE $KERNEL_DEFCONFIG CC="clang" && make $KERNEL_CMDLINE CC="clang" -j$(nproc --all) && cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3
      - name: Upload Kernel
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.KERNEL_DEFCONFIG }}
          path: "AnyKernel3/*"
