name: LLVM Clang
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_MAXSIZE: "3G"
      CCACHE_HARDLINK: "true"
      KERNEL_DEFCONFIG: "star2qlte_chn_open_defconfig"
      KERNEL_CMDLINE: "ARCH=arm64 CC=clang LLVM=1 CROSS_COMPILE=aarch64-linux-gnu- LD_LIBRARY_PATH=/usr/lib/llvm-20/lib/ O=out"
      EXTRAVERSION: "-teste"
          
    steps:
      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 24
    
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: Andrey0800770/samsung_sdm845-kernel
          ref: test
          submodules: "false"
          fetch-depth: 100

      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2

      - name: Install dependencies
        run: |
          sed -i 's/EXTRAVERSION =.*/EXTRAVERSION = ${{ env.EXTRAVERSION }}/' Makefile
          sudo tee /etc/apt/sources.list > /dev/null <<EOF
          deb http://archive.ubuntu.com/ubuntu/ noble main restricted universe multiverse
          deb http://archive.ubuntu.com/ubuntu/ noble-updates main restricted universe multiverse
          deb http://archive.ubuntu.com/ubuntu/ noble-backports main restricted universe multiverse
          deb http://security.ubuntu.com/ubuntu/ noble-security main restricted universe multiverse
          EOF
          sudo apt-get update -y 
          sudo apt install gcc-aarch64-linux-gnu -y
          sudo apt install gcc-arm-linux-gnueabi -y
          sudo apt install aria2 binutils make python3 libssl-dev build-essential bc bison flex unzip libssl-dev ca-certificates xz-utils mkbootimg cpio device-tree-compiler git git-lfs -y
          sudo dpkg -l | grep clang | awk '{print $2}' | xargs sudo apt-get remove -y
          wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh && sudo ./llvm.sh 20
          curl -L -o register_clang.sh https://raw.githubusercontent.com/Andrey0800770/kernel-build/refs/heads/main/files/update-alternatives.sh && chmod +x register_clang.sh && sudo ./register_clang.sh 20 1000
          clang --version
          ld.lld --version
          llvm-as --version
          git clone https://github.com/osm0sis/AnyKernel3
          sed -i 's/do.devicecheck=1/do.devicecheck=0/g' AnyKernel3/anykernel.sh
          sed -i 's!BLOCK=/dev/block/platform/omap/omap_hsmmc.0/by-name/boot;!BLOCK=auto;!g' AnyKernel3/anykernel.sh
          sed -i 's/IS_SLOT_DEVICE=0;/is_slot_device=auto;/g' AnyKernel3/anykernel.sh
          rm -rf AnyKernel3/.git* AnyKernel3/README.md
      - name: Build Kernel-With-KernelSU
        run: |
          make $KERNEL_CMDLINE $KERNEL_DEFCONFIG CC="ccache clang"
          make $KERNEL_CMDLINE CC="ccache clang" -j$(nproc --all)
          cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3
      - name: Upload Kernel
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.KERNEL_DEFCONFIG }}
          path: "AnyKernel3/*"
