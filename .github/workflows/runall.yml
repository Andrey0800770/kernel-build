name: Compile All S9/S9+/N9 kernels
on: [workflow_dispatch]
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
          - star2qlte_chn_open_defconfig
          - starqlte_chn_open_defconfig
          - starqlte_usa_single_defconfig
          - star2qlte_usa_single_defconfig
          - starqlte_jpn_defconfig
          - crownqlte_chn_open_defconfig
    runs-on: ubuntu-latest
    env:
      KERNEL_DEFCONFIG: "${{ matrix.config }}"
      KERNEL_CMDLINE: "ARCH=arm64 CC=clang LLVM=1 O=out"
      EXTRAVERSION: "-Rel9"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: Andrey0800770/samsung_sdm845-kernel
          ref: ksu+susfs
          submodules: "false"
          fetch-depth: 100
      - name: Set artifact name
        id: artifact_name
        run: |
          case "${{ matrix.config }}" in
            "crownqlte_chn_open_defconfig") echo "name=crownqltechn-v4.9.337${{ env.EXTRAVERSION }}" >> $GITHUB_OUTPUT ;;
            "star2qlte_usa_single_defconfig") echo "name=star2qlteusa-v4.9.337${{ env.EXTRAVERSION }}" >> $GITHUB_OUTPUT ;;
            "starqlte_jpn_defconfig") echo "name=starqltejpn-v4.9.337${{ env.EXTRAVERSION }}" >> $GITHUB_OUTPUT ;;
            "star2qlte_chn_open_defconfig") echo "name=star2qltechn-v4.9.337${{ env.EXTRAVERSION }}" >> $GITHUB_OUTPUT ;;
            "starqlte_chn_open_defconfig") echo "name=starqltechn-v4.9.337${{ env.EXTRAVERSION }}" >> $GITHUB_OUTPUT ;;
            "starqlte_usa_single_defconfig") echo "name=starqlteusa-v4.9.337${{ env.EXTRAVERSION }}" >> $GITHUB_OUTPUT ;;
          esac
      - name: Install dependencies
        run: |
          sed -i 's/EXTRAVERSION =.*/EXTRAVERSION = ${{ env.EXTRAVERSION }}/' Makefile
          sudo tee /etc/apt/sources.list > /dev/null <<EOF
          deb http://archive.ubuntu.com/ubuntu/ noble main restricted universe multiverse
          deb http://archive.ubuntu.com/ubuntu/ noble-updates main restricted universe multiverse
          deb http://archive.ubuntu.com/ubuntu/ noble-backports main restricted universe multiverse
          deb http://security.ubuntu.com/ubuntu/ noble-security main restricted universe multiverse
          EOF
          sudo apt-get update -y && sudo apt install aria2 binutils make python3 libssl-dev build-essential bc bison flex unzip libssl-dev ca-certificates xz-utils mkbootimg cpio device-tree-compiler git git-lfs -y
          aria2c -j$(nproc --all) https://github.com/ZyCromerZ/Clang/releases/download/22.0.0git-20250912-release/Clang-22.0.0git-20250912.tar.gz -o clang.tar.gz
          mkdir clang && tar -xzvf clang.tar.gz -C clang >> /dev/null
          git clone https://github.com/Andrey0800770/kernel-build/ -b anykernel AnyKernel3 && rm -rf AnyKernel3/.git*
      - name: Build Kernel-With-KernelSU
        run: |
          export KBUILD_BUILD_USER="andrey" KBUILD_BUILD_HOST="linux"
          export PATH=$(pwd)/clang/bin/:$PATH
          make $KERNEL_CMDLINE $KERNEL_DEFCONFIG CC="clang" && make $KERNEL_CMDLINE CC="clang" -j$(nproc --all) && cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3
      - name: Upload Kernel
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.artifact_name.outputs.name }}
          path: "AnyKernel3/*"
