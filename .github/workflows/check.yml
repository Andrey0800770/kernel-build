name: Build Kernel
on:
  workflow_dispatch:
  push:
    branches: [test]
  pull_request:
    branches: [test]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CCACHE_MAXSIZE: "2G"
      KERNEL_DEFCONFIG: "star2qlte_chn_open_defconfig"
      KERNEL_CMDLINE: "ARCH=arm64 CC=clang CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- O=out"
    
    steps:
      - uses: actions/checkout@v4
        with:
          repository: Andrey0800770/samsung_sdm845-kernel
          ref: test
          fetch-depth: 100

      - uses: hendrikmuhs/ccache-action@v1.2

      - name: Install dependencies
        run: |
          sudo apt-get update -y 
          sudo apt install gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi aria2 binutils make python3 libssl-dev build-essential bc bison flex unzip ca-certificates xz-utils mkbootimg cpio device-tree-compiler git -y
          aria2c -j$(nproc --all) $(curl -fsSL https://raw.githubusercontent.com/ZyCromerZ/Clang/refs/heads/main/Clang-main-link.txt)
          mkdir zyc-clang
          tar -xzf Clang-*.tar.gz -C zyc-clang
          git clone https://github.com/osm0sis/AnyKernel3
          sed -i 's/do.devicecheck=1/do.devicecheck=0/g' AnyKernel3/anykernel.sh
          sed -i 's!BLOCK=/dev/block/platform/omap/omap_hsmmc.0/by-name/boot;!BLOCK=auto;!g' AnyKernel3/anykernel.sh
          sed -i 's/IS_SLOT_DEVICE=0;/is_slot_device=auto;/g' AnyKernel3/anykernel.sh
          rm -rf AnyKernel3/.git* AnyKernel3/README.md
          
      - name: Build Kernel
        run: |
          export PATH=$(pwd)/zyc-clang/bin/:$PATH
          make $KERNEL_CMDLINE $KERNEL_DEFCONFIG CC="ccache clang"
          make $KERNEL_CMDLINE CC="ccache clang" -j$(nproc --all)
          cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.KERNEL_DEFCONFIG }}
          path: "AnyKernel3/*"
